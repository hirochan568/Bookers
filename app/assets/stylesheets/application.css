
ご意見・ご要望
opinion box
アプリケーションを完成させよう
2章【TOPページを作ろう】
学習の目標
本章では、CARAVANサイトのTopページを作成します。
ここで行う作業は、以下のとおりです。

コントローラの作成
ルーティングの設定
Viewファイルの作成
HTMLの記述
CSSの記述
順を追って学んでいきましょう。


目次
コントローラを作成する
resourcesでルーティングを設定する
index.html.erbにHTMLを記述する
application.cssにCSSを記述する
application.html.erbにHTMLを記述する
画像用フォルダを作成する
動作を確認する
確認問題

コントローラを作成する
前章では、Blogという名のモデルを作成しました。続けて、コントローラとViewを実装していきましょう。

アクションも同時に作成する
Railsのgenerateコマンドを用いて、コントローラとアクション（Viewを使うアクション）をまとめて作成します。
Viewを使わないアクションは、後ほど個別に追加します。

CARAVANサイトで必要なアクションは、以下の7つです。

index（記事一覧＋Topページ）
show（詳細表示ページ）
new（新規投稿ページ）
create（記事を保存する）
edit（記事編集ページ）
update（記事を更新する）
destroy（記事を削除する）
このうち、Viewを使うアクションは、以下の4つです。

index
show
new
edit
create、update、destroyは処理の実行だけなので、Viewは不要です。後でそれぞれアクションを追加していきます。

Railsのモデルやコントローラの命名規則は覚えていますか。
モデル名を「Blog」にしたので、コントローラ名は複数形の小文字「blogs」にするのが規則です。
さらに、コントローラ名の後ろにアクション名を指定することで、複数のアクションをまとめて作成できます。

username:~/environment/CARAVAN $ rails g controller blogs index show new edit
このコマンドによって、以下のアクションやファイルがまとめて作成されました。

blogsコントローラ
indexアクション
showアクション
newアクション
editアクション
blogs/index.html.erbファイル
blogs/show.html.erbファイル
blogs/new.html.erbファイル
blogs/edit.html.erbファイル
このように、generateでは、コントローラやアクションをまとめて自動設定することができます。ぜひ使いこなしてください。


resourcesでルーティングを設定する
次に、ルーティングを設定します。
ルーティングは、個別に設定も可能です。ただし、今回扱う7つのアクションは開発の際によく使われるので、そのたびに設定するのは効率的とはいえません。
こんなときは、ルーティングを1行書くだけで自動設定される機能を利用しましょう。

ちなみに、今回のindexからdestroyまでの7つのアクションのことを、RESTfulなURLと呼んでいます。
（RESTfulとは、REST（REpresentational State Transfer）の設計思想に基づいたシステム）

resourcesメソッドを利用すると、このRESTfulなURLを自動で設定してくれます。開発効率が上がりますのでぜひ活用しましょう。

さて、resourcesメソッドを設定する前に、1つ準備をします。
routes.rbファイル内には、コントローラ作成時に4アクションの設定値が自動的に追記されています。
下記の4つのget行を削除してください。

get 'blogs/index'
get 'blogs/show'
get 'blogs/new'
get 'blogs/edit'
get行を削除できたら、改めて、以下の1行を追加しましょう。
この1行を追加するだけで、indexからdestroyまでの7つのルーティングが定義されます。

config/routes.rb
Rails.application.routes.draw do
  # For details on the DSL available within this file, see https://guides.rubyonrails.org/routing.html
  resources :blogsend
記述できたら、ルーティングを確認しましょう。

ルーティングを確認する
routes.rbファイルで定義したルーティングは、rails routesコマンドで確認できます。

username:~/environment/CARAVAN $ rails routes
以下のように表示されることを確認してください。

username:~/environment/CARAVAN $ rails routes
                   Prefix Verb   URI Pattern                                                                              Controller#Action
                    blogs GET    /blogs(.:format)                                                                         blogs#index
                          POST   /blogs(.:format)                                                                         blogs#create
                 new_blog GET    /blogs/new(.:format)                                                                     blogs#new
                edit_blog GET    /blogs/:id/edit(.:format)                                                                blogs#edit
                     blog GET    /blogs/:id(.:format)                                                                     blogs#show
                          PATCH  /blogs/:id(.:format)                                                                     blogs#update
                          PUT    /blogs/:id(.:format)                                                                     blogs#update
                          DELETE /blogs/:id(.:format)                                                                     blogs#destroy
       rails_service_blob GET    /rails/active_storage/blobs/:signed_id/*filename(.:format)                               active_storage/blobs#show
rails_blob_representation GET    /rails/active_storage/representations/:signed_blob_id/:variation_key/*filename(.:format) active_storage/representations#show
       rails_disk_service GET    /rails/active_storage/disk/:encoded_key/*filename(.:format)                              active_storage/disk#show
update_rails_disk_service PUT    /rails/active_storage/disk/:encoded_token(.:format)                                      active_storage/disk#update
     rails_direct_uploads POST   /rails/active_storage/direct_uploads(.:format)                                           active_storage/direct_uploads#create
index.html.erbにHTMLを記述する
コントローラを作成すると、同時にindex.html.erbファイルも作成されます。
このファイルにHTMLを記述して、外観を整えていきます。
下記のHTMLコードは、以前利用したコードを少し修正しています。コピー＆ペーストしましょう。

app/views/blogs/index.html.erb
<!-- header -->
<header>
  <h1 class="heading">
    <a href="index.html">
      CARAVAN
    </a>
  </h1>
  <div class="social">
    <i class="fab fa-facebook-square"></i>
    <i class="fab fa-twitter-square"></i>
    <i class="fab fa-instagram"></i>
  </div>
</header>
<nav>
  <ul class="nav-list">
    <li class="nav-list-item">Home</li>
    <li class="nav-list-item">About</li>
    <li class="nav-list-item">Topic</li>
  </ul>
</nav>

<!-- main-visual用のdiv -->
<div class="main-visual">
  <div class="main-visual-content">
    <p class="main-visual-text">
      The world is a book<br />
      and those who do not travel<br />
      read only one page.
    </p>
    <p class="main-visual-name">
      St. Augustine
    </p>
  </div>
</div>

<!-- main -->
<main>
  <section class="blog">
    <h2 class="blog-heading">Recent Blogs</h2>
    <div class="blog-box">
      <div class="blog-item">
        <%= image_tag('img/forest.jpg', class: 'blog-image') %>
        <section class="blog-text">
          <h3 class="blog-text-heading">
            <a href="single.html">
              Hopeful lessons from<br />
              the battle to save<br />
              rainforests
            </a>
          </h3>
          <p class="blog-date">June 19, 2017</p>
          <span class="category">Nature</span>
        </section>
      </div>
      <div class="blog-item">
        <%= image_tag('img/desert.jpg', class: 'blog-image') %>
        <section class="blog-text">
          <h3 class="blog-text-heading">
            <a href="single.html">
              How to fight<br />
              desertification and<br />
              reverse climate change
            </a>
          </h3>
          <p class="blog-date">June 17, 2017</p>
          <span class="category">Nature</span>
        </section>
      </div>
      <div class="blog-item">
        <%= image_tag('img/sunset.jpg', class: 'blog-image') %>
        <section class="blog-text">
          <h3 class="blog-text-heading">
            <a href="single.html">
              Why I'm rowing<br />
              across the Pacific
            </a>
          </h3>
          <p class="blog-date">June 16, 2017</p>
          <span class="category">Adventure</span>
        </section>
      </div>
      <div class="blog-item">
        <%= image_tag('img/italy.jpg', class: 'blog-image') %>
        <section class="blog-text">
          <h3 class="blog-text-heading">
            <a href="single.html">
              Unseen footage,<br />
              untamed nature
            </a>
          </h3>
          <p class="blog-date">June 15, 2017</p>
          <span class="category">Nature</span>
        </section>
      </div>
      <div class="blog-item">
        <%= image_tag('img/asia.jpg', class: 'blog-image') %>
        <section class="blog-text">
          <h3 class="blog-text-heading">
            <a href="single.html">
              The case for<br />
              engineering our food
            </a>
          </h3>
          <p class="blog-date">June 14, 2017</p>
          <span class="category">Culture</span>
        </section>
      </div>
    </div>
    <div class="pagination">
      <p><<</p>
      <p><</p>
      <p>1</p>
      <p>2</p>
      <p>3</p>
      <p>></p>
      <p>>></p>
    </div>
  </section>

  <!-- sidebar -->
  <div class="sidebar">
    <section class="popular">
      <h2 class="sidebar-heading common-heading">Popular</h2>
      <div class="sidebar-contents">
        <p class="popular-text">
          To solve old problems,<br />study new species
        </p>
        <p class="popular-text">
          Why Earth may someday<br />look like Mars
        </p>
        <p class="popular-text">
          What will humans look<br />like in 100 years?
        </p>
        <p class="popular-text">
          How to grow a forest<br />in your backyard
        </p>
        <p class="popular-text">
          How humans could evolve<br />to survive in space
        </p>
      </div>
    </section>
    <section class="instagram">
      <h2 class="instagram-heading common-heading">Instagram</h2>
      <div class="sidebar-contents">
        <div class="instagram-box"></div>
        <div class="instagram-box"></div>
        <div class="instagram-box"></div>
        <div class="instagram-box"></div>
        <div class="instagram-box"></div>
        <div class="instagram-box"></div>
      </div>
    </section>
    <section class="categories">
      <h2 class="categories-heading common-heading">Categories</h2>
      <div class="sidebar-contents">
        <p class="categories-text">Technology(15)</p>
        <p class="categories-text">Business(23)</p>
        <p class="categories-text">Entertainment(12)</p>
        <p class="categories-text">Nature(32)</p>
        <p class="categories-text">Education(9)</p>
        <p class="categories-text">Adventure(23)</p>
        <p class="categories-text">Communication(14)</p>
      </div>
    </section>
  </div>
</main>

<!-- footer -->
<footer>
  <p class="footer-text">© All rights reserved by Infratop.Inc.</p>
</footer>

application.cssにCSSを記述する
HTMLを記述できたので、続けてCSSで見た目を整えていきましょう。CSSファイルは、app/assets/stylesheetsフォルダ内に保存されています。

その中のapplication.cssファイルに、CSSを記述します。
CSSは、CARAVANサイトのCSSを流用せずに、新たに以下のCSSを記述してください。コピー＆ペーストでもかまいません。

app/assets/stylesheets/application.css
/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

/* ブラウザがそれぞれ持っているCSSをリセットするための記述 */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  color: #6c6b6b;
}

body .heading{
  display: block;
  font-size:2em;
  font-weight: bold;
}

body .p{
  font-size: 13px;
  line-height:18px;
  margin: 33px;
}

